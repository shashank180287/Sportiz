Believe in deliver with quality, in time....To experience, give me a change

Over 6 years of experience in Java and J2EE technologies.
Delivered over 10 web application with HTML5 and JQuery.
Experience in Spring IoC and MVC, Hibernate
Experience in Maven and ANT
Experience in GIT, SVN and CVS
Delivered application hosted on Google App Engine connected Google DB.
Experience in NoSQL DBs like CouchDB and MongoDB 
Experience in Financial domain specially in OTC market
Delivered projects with automatic testing using JUnit, JMock and JMeter
Experience in scripting like shell and python
Worked on similar project:
https://www.youtube.com/watch?v=yQNtKriSQyE 


https://portal.aws.amazon.com/billing/signup?state=hashArgs%23%2Fpaymentinformation&type=resubscribe&isauthcode=true&code=K9lPAgNuBVvXkdhjJ8rRGFiZqagyV0DeilK7oDdidG9vyEgCjjGNKqu3verbK65OleMbWVNRX2wINzhEYQr4AFmwkXAREvVth5RCmfYmja8OzRNR525q4CJ5Gs5mHUHUrMOwXfm1blYOyyqlE8JNcxldcc_ce9qNLrR6SY8jL9itsKFYtqanaxZIU3OQVXKBWoOZDy8wQw6I0WhiWAkvq9Z3rERNAVT1QWlV9evUkoGDWIS-2rgZPQnx9LrpFnlSro40U1yXvILqpLwVuFYmKigxFU0z2eYWCDFFeYmbvzY-0WXkCduzH6gZFpNgvF1VY2g8QwTj4g3xIGkTk2AlyYbcHCtJxFB87994WEimJTGI3eKU2ygnGt6E5s8b84cLtFqeoMVmBLq8yzNg9wO6SRaptpp2lJYBN6YphYJgcMHYnIx9OBcmuvyIQnkMy1To75H1JZbmp8qhjbAUS93PZ3Yc2RsLjA6aLSc7sj7nunKG10ZTVubpA_ZLk1GqDQ1C8Tga3CxzWke5ifvKFj_pYe9M6tHgd53MPVrDYiwNm4IKDv3JkciE-6c0TsS135cgul9jR3aIHDdpWE9N9j5b_zPT1kqSO9Qbe2ZrqH8bZVNXRqtpNvU6MqJ68mSlQYv1RmOJRMD45OCjokD0GdfK6fJ0N49JI7NQLKjV-89azRNDk9O9Nk6VyEdA5D7oHSVb9Hx4IjbZg-VR-8H7l_Wf-WFsdD5Wq2IcJuj5jEVo7ePeiUB8gmbhGccVkgzKjJtlT1hrnfhr4VZflhk9f4ROv4RIqskmqiZIJybh-dqeU747Cdm03Jl-KusllnN7H43hTNOoqZulAi3vMcx7lieia-t8cPVlOQvC0ChWbIeuXgaUNOtVwQ9AEp3RawM0wqvCfoEK3nvIVgMvzyncceVZRiY_8wQQ-S5386lcuo_xc2bNcXcGqd2FKlmhgI2pqEycFz3XgmFW6odbG7NXQJllEsGrL2DGyaNbP0aUQnAG1ZSgn5oRmYQR0gfA_cjAFHrPRwKho8yeoAeRtK0eB4jVbVQYO1x0pnmLQX--0B6kaKANjgekeKk7gAn_B7A5P85T_UtWqpBIVMXnFDWRYY0cAZvFGpfuEJTwPkwTu1MnQEK-30a3TUpQn3-6mC9_2ygrM68mBPgtAfD1eOwUqpqRBIN8UxgD0chlk4b-kg#/paymentinformation


AWS Course:
* By default, all the buckets and object in S3 are privately access until you provide access.
* In practical, S3 name does not have region name.
* S3 provide AES-256 server side encryption where data will be encrypted before storing in S3.
* In S3, there are two type of permission management, 1) Manage User for users present in IAM 2) Manage Public permission for AWS users or public.
* In S3, there are two type of access granted: 1) Objects which allows to create/modify/delete objects in bucket 2) Object Permission which allows to grant permissions of create/modify/delete to other users also.
* Once versioning is enabled in S3, it cannot be removed unless you delete the bucket though it can be disabled.
* Even you enable everyone read for bucket, for each object you need to enable it.
* While designing system for most cost effective ways with very large files, we might want versioning disable as if file is of 4GB and we change this slightly, total storage in S3 will be 8GB for single file.
* If you delete version, it cannot be restored but if you delete any object in S3, it can be restored by removing the marker of delete operation from old view if versioning is enabled.
* For cross region replication, versioning should be enabled in both buckets and same region replication is not allowed.
*While enabling cross region replication, only new object replicate. Exsisting elements will not. But if you update an existing object, it will replicate all previous version also in destination bucket. Even permission are replicated.
* You cant replicate to two different buckets as well as A->B->C. The object will be replicate in C, only if, object are written to B manually.
* If you delete any element from bucket, deletion will be replicated to other bucket. But if you delete "Delete Marker", your object will be restored in main bucket but will not in replicated bucket. The same is valid for version also. If you remove any version from main bucket, you can still restored that version from destination bucket.
* For S3 Lifecycle management, if you select "Action on current version" and delete, it will put a delete marker but if you select "Action on previous version" and select delete. It will delete object permanently.
* Glacier is designed to keep object 90 days minimum. So  even if object is deleted before, 90 days charge will be applicable.
* Lifecycle can be done with versioning on/off 
* To move object in IA, it needs to be 128Kb in size and 30 days old
* RTMP distribution speeds up the distribution of your streaming media files using Adobe Flash Media Server's RTMP protocol.
* A single distribution allows to have different origin which can be distinguish with origin id.
* Smooth Stream service is used to Microsoft Smooth Stream APIs.
* Restrict Viewer Access (Use Signed URLs or Signed Cookies) allowed your content to be viewed by specific group of users.
*


*
