Believe in deliver with quality, in time....To experience, give me a change

Over 6 years of experience in Java and J2EE technologies.
Delivered over 10 web application with HTML5 and JQuery.
Experience in Spring IoC and MVC, Hibernate
Experience in Maven and ANT
Experience in GIT, SVN and CVS
Delivered application hosted on Google App Engine connected Google DB.
Experience in NoSQL DBs like CouchDB and MongoDB 
Experience in Financial domain specially in OTC market
Delivered projects with automatic testing using JUnit, JMock and JMeter
Experience in scripting like shell and python
Worked on similar project:
https://www.youtube.com/watch?v=yQNtKriSQyE 


https://portal.aws.amazon.com/billing/signup?state=hashArgs%23%2Fpaymentinformation&type=resubscribe&isauthcode=true&code=K9lPAgNuBVvXkdhjJ8rRGFiZqagyV0DeilK7oDdidG9vyEgCjjGNKqu3verbK65OleMbWVNRX2wINzhEYQr4AFmwkXAREvVth5RCmfYmja8OzRNR525q4CJ5Gs5mHUHUrMOwXfm1blYOyyqlE8JNcxldcc_ce9qNLrR6SY8jL9itsKFYtqanaxZIU3OQVXKBWoOZDy8wQw6I0WhiWAkvq9Z3rERNAVT1QWlV9evUkoGDWIS-2rgZPQnx9LrpFnlSro40U1yXvILqpLwVuFYmKigxFU0z2eYWCDFFeYmbvzY-0WXkCduzH6gZFpNgvF1VY2g8QwTj4g3xIGkTk2AlyYbcHCtJxFB87994WEimJTGI3eKU2ygnGt6E5s8b84cLtFqeoMVmBLq8yzNg9wO6SRaptpp2lJYBN6YphYJgcMHYnIx9OBcmuvyIQnkMy1To75H1JZbmp8qhjbAUS93PZ3Yc2RsLjA6aLSc7sj7nunKG10ZTVubpA_ZLk1GqDQ1C8Tga3CxzWke5ifvKFj_pYe9M6tHgd53MPVrDYiwNm4IKDv3JkciE-6c0TsS135cgul9jR3aIHDdpWE9N9j5b_zPT1kqSO9Qbe2ZrqH8bZVNXRqtpNvU6MqJ68mSlQYv1RmOJRMD45OCjokD0GdfK6fJ0N49JI7NQLKjV-89azRNDk9O9Nk6VyEdA5D7oHSVb9Hx4IjbZg-VR-8H7l_Wf-WFsdD5Wq2IcJuj5jEVo7ePeiUB8gmbhGccVkgzKjJtlT1hrnfhr4VZflhk9f4ROv4RIqskmqiZIJybh-dqeU747Cdm03Jl-KusllnN7H43hTNOoqZulAi3vMcx7lieia-t8cPVlOQvC0ChWbIeuXgaUNOtVwQ9AEp3RawM0wqvCfoEK3nvIVgMvzyncceVZRiY_8wQQ-S5386lcuo_xc2bNcXcGqd2FKlmhgI2pqEycFz3XgmFW6odbG7NXQJllEsGrL2DGyaNbP0aUQnAG1ZSgn5oRmYQR0gfA_cjAFHrPRwKho8yeoAeRtK0eB4jVbVQYO1x0pnmLQX--0B6kaKANjgekeKk7gAn_B7A5P85T_UtWqpBIVMXnFDWRYY0cAZvFGpfuEJTwPkwTu1MnQEK-30a3TUpQn3-6mC9_2ygrM68mBPgtAfD1eOwUqpqRBIN8UxgD0chlk4b-kg#/paymentinformation


AWS Course:

Snip lecture 66 @ 5:08
Take table from http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-comparison.html

Elastic Cache supports Master/Slave replication and Multi AZ which can be used to achieve cross AZ redundancy.
Elastic cache is a good choice if your database is read heavy and not prone to frequent changes while Redshift is useful if database is feeling stress because of heavy OLAP transaction on it.
Aurora provides uoto 5 time better performance than MySQL at a price point one tenth of a commecial databases. Aurora database starts with 10 Gb storage, scale in 10Gb increments up to 64 Tb. Compute resources can scale up to 32vCPUs and 244Gb of memory.
Aurora keeps 2 copies of your data in each AZ with minimum of 3 AZ. So total 6 copies of data with handling loss of up to 2 copies of data without affecting write availability and loss of 3 copies of data without affecting read availability. Its self healing. 
If you are using Amazon RDS Provisioned IOPS storage with MySQL and Oracle database engines 6TB is the maximum size RDS volume and  30,000 IOPS capacity, you can have by default.

•	VPC
•	When you create VPC, it creates Network ACLs, Security Group and Route Tables by default. If you delete default VPC, only way to bring it back is to contact AWS. 5 VPC's are allowed in each AWS Region by default.
•	1 subnet can be attached to one AZ as well as one Network ACL only. If you add any subnet to one ACL, it will be removed from Network ACL which was created with VPN. So to create high available system, we should have 2 publicly available subnet in 2 different AZs. It cannot be spanned to multiple AZ. By default AWS reserves 251 IPs for any new subnet. AWS reserves 5 IP addresses for their operation: 
1) 10.0.0.0: Network address 
2) 10.0.0.1: Reserved for VPC router 
3) 10.0.0.2: Reserved for DNS IP address, as its base of VPC network range plus 2 
4) 10.0.0.3: Reserved for future use
5) 10.0.0.255: Network broadcast address, VPC does not support broadcast.
•	You cannot attach multiple Internet gateway to VPC. 
•	AWS provides Elastic IPs which can be associated with any EC2 instances. Deploy any EC2 instance in public subnet does not allow internet. You need to define Elastic IP or Elastic Load Balancer. Even if you create inbound and outbound rule, you cannot access public subnet until you open the Ephemeral Ports on 1024-65535.
•	NAT Gateway and NAT Instance can be used to provide access to private subnet securely. NAT Gateway is new and auto scalable as well no need to define Security Group. For NAT instance, we need to disable Source Destination Check. NAT Gateway scale automatically up to 10 Gbps. Not associate with SG and assign public IP automatically.
•	Through NAT instance, private subnet EC2 instance can access internet but people from internet cannot access (SSH) into these systems. For this purpose, Bastion is used.
•	Network ACL created with VPC by default allows all inbound/outbound traffic but if you create any custom Network ACL, inbound/outbound traffic is denied. Network ACL rules are executed in order. They are not overrides. To block any IP addresses, we can use Network ACL's not Security Group. NACL are applies to all instances in subnet while SG, manually need to apply to each instances. 
•	VPC Peering allows you to connect one VPC with another via direct network route using private IPs. VPC Peering wouldn’t work if they have matching or overlapping CIDR (IP) block and if VPCs are in different regions. Peering does not support transitive peering relation b/w A and C if A->B and B->C.
•	AWS support Active Directory with SAML authentication where you will be authenticated with Active Directory first then given temporary credentials.
•	VPC Flow logs help all VPC network actions logging to CloudWatch.




•	Application Services
•	There are 2 types of SQS: 
1)	Standard Queue (default) allows you to have almost unlimited transection per second.
2)	FIFO Queue deliver message once only. It’s limited to 300 transection per second.
<Place snip here>
•	AWS SQS Long Polling does not return until a message arrive or Long Polling times out irrespective of regular polling, which returns immediately. There are 3 actors in SWF 1) Starters, 2) Deciders and 3) Workers.
•	SNS can publish message to Mobile devices, SMS, emails, SQS, HTTP end points or Lambda function. Pay-as-you-go model with no up-front costs. $0.50 per 1 million requests, $0.06 per 100,000 HTTP notifications, $0.75 per 100 SMS and $2.00 per 100,000 emails.
•	AWS SWF retain message for 1 year of workflow execution while SQS keeps it for 14 days. SWF is task oriented, ensure task is assigned only once and track all tasks and events.	
•	Elastic Transcoder convert media file per destination systems. Pay based on the minute that you transcode and the resolution at which you transcode.
•	API Gateway is low cost, auto scale, enabled Caching for better performance, throttle to prevent attacks and can log result to CloudWatch.
•	There are 2 types of Computing Policies in web application security:
1)	Same-Origin Policy, script on first web page can access data from second page only if both are on same origin.
2)	Cross-Origin Resource Policy (CORS), Error message “Origin policy cannot be read at the remote resources?”, you need to enable CORS on API Gateway



